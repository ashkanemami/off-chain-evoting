import MetaMaskOnboarding from '@metamask/onboarding';
const BabyJubJub = require("./BabyJubPoint");
import {
	ethers
} from "ethers";
import {
	initialize
} from 'zokrates-js';
const utils = require("ffjavascript").utils;
const forwarderOrigin = 'http://localhost:9010';
var data = " import \"ecc/edwardsAdd\" as add\n import \"ecc/edwardsScalarMult\" as multiply\n import \"utils/pack/bool/nonStrictUnpack256\" as unpack256\n import \"ecc/babyjubjubParams\" as context\n from \"ecc/babyjubjubParams\" import BabyJubJubParams\n def main(field[2] sG, field[2] rG, field[2] rsG, private field s) -> (bool):\n BabyJubJubParams context = context()\n field[2] G = [context.Gu, context.Gv]\n bool[256] skBits = unpack256(s)\n field[2] ptExp1 = multiply(skBits, G, context)\n field[2] ptExp2 = multiply(skBits, rG, context)\n bool out = if ptExp1[0] == sG[0] && ptExp1[1] == sG[1] && ptExp2[0] == rsG[0] && ptExp2[1] == rsG[1] then true else false fi\n return out";
let abi = [{
	"inputs": [],
	"stateMutability": "nonpayable",
	"type": "constructor"
}, {
	"anonymous": false,
	"inputs": [{
		"indexed": false,
		"internalType": "uint256",
		"name": "result",
		"type": "uint256"
	}],
	"name": "ElectionEnded",
	"type": "event"
}, {
	"anonymous": false,
	"inputs": [{
		"indexed": false,
		"internalType": "enum VoteContainer.VotingPhases",
		"name": "",
		"type": "uint8"
	}],
	"name": "NewElectionPhase",
	"type": "event"
}, {
	"inputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"name": "C",
	"outputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"stateMutability": "view",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"name": "R",
	"outputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"stateMutability": "view",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "address",
		"name": "decryptorAddress",
		"type": "address"
	}, {
		"internalType": "uint256",
		"name": "_decryptorPublicKey",
		"type": "uint256"
	}],
	"name": "addDecryptorPublicKey",
	"outputs": [],
	"stateMutability": "nonpayable",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "address",
		"name": "voterAddress",
		"type": "address"
	}],
	"name": "addVoter",
	"outputs": [],
	"stateMutability": "nonpayable",
	"type": "function"
}, {
	"inputs": [],
	"name": "admin",
	"outputs": [{
		"internalType": "address",
		"name": "",
		"type": "address"
	}],
	"stateMutability": "view",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "address",
		"name": "",
		"type": "address"
	}],
	"name": "decryptorPublicKey",
	"outputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"stateMutability": "view",
	"type": "function"
}, {
	"inputs": [],
	"name": "endRegistration",
	"outputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"stateMutability": "nonpayable",
	"type": "function"
}, {
	"inputs": [],
	"name": "endVoteCasting",
	"outputs": [],
	"stateMutability": "nonpayable",
	"type": "function"
}, {
	"inputs": [],
	"name": "key",
	"outputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"stateMutability": "view",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "uint256",
		"name": "votingResult",
		"type": "uint256"
	}],
	"name": "revealVotingResult",
	"outputs": [],
	"stateMutability": "nonpayable",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"name": "totalVotesC",
	"outputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"stateMutability": "view",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"name": "totalVotesR",
	"outputs": [{
		"internalType": "uint256",
		"name": "",
		"type": "uint256"
	}],
	"stateMutability": "view",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "uint256",
		"name": "newVoteR",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "newVoteC",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "c",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "d1",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "d2",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "r1",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "r2",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "A1",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "B1",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "A2",
		"type": "uint256"
	}, {
		"internalType": "uint256",
		"name": "B2",
		"type": "uint256"
	}],
	"name": "vote",
	"outputs": [],
	"stateMutability": "nonpayable",
	"type": "function"
}, {
	"inputs": [{
		"internalType": "uint256[2]",
		"name": "a",
		"type": "uint256[2]"
	}, {
		"internalType": "uint256[2][2]",
		"name": "b",
		"type": "uint256[2][2]"
	}, {
		"internalType": "uint256[2]",
		"name": "c",
		"type": "uint256[2]"
	}, {
		"internalType": "uint256",
		"name": "sRComressed",
		"type": "uint256"
	}],
	"name": "voteDecrypt",
	"outputs": [],
	"stateMutability": "nonpayable",
	"type": "function"
}];
const bytecode = "60806040523480156200001157600080fd5b5033601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180608001604052806000815260200160018152602001600081526020016001815250600c9060046200008a92919062000126565b50604051806080016040528060008152602001600181526020016000815260200160018152506000906004620000c292919062000126565b50604051806080016040528060008152602001600181526020016000815260200160018152506004906004620000fa92919062000126565b506000601460016101000a81548160ff021916908360038111156200011b57fe5b021790555062000193565b826004810192821562000158579160200282015b82811115620001575782518255916020019190600101906200013a565b5b5090506200016791906200016b565b5090565b6200019091905b808211156200018c57600081600090555060010162000172565b5090565b90565b613c5180620001a36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b18729b01161008c578063e5cfd84911610066578063e5cfd8491461043e578063ec6d1b2514610480578063f4ab9adf146104ce578063f851a44014610512576100ea565b8063b18729b0146103c4578063bbc73fe914610406578063bdb5001314610410576100ea565b80636274ec2d116100c85780636274ec2d146102555780636e9ed8cf146102e85780638ccc5bee1461032a578063913b69661461036c576100ea565b80633943380c146100ef57806348747a141461010d5780634a8a62ab14610237575b600080fd5b6100f761055c565b6040518082815260200191505060405180910390f35b610235600480360361012081101561012457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156101d9578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610185565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610562565b005b61023f610919565b6040518082815260200191505060405180910390f35b6102e6600480360361016081101561026c57600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610b1a565b005b610314600480360360208110156102fe57600080fd5b8101908080359060200190929190505050611212565b6040518082815260200191505060405180910390f35b6103566004803603602081101561034057600080fd5b810190808035906020019092919050505061122a565b6040518082815260200191505060405180910390f35b6103ae6004803603602081101561038257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611242565b6040518082815260200191505060405180910390f35b6103f0600480360360208110156103da57600080fd5b810190808035906020019092919050505061125a565b6040518082815260200191505060405180910390f35b61040e611272565b005b61043c6004803603602081101561042657600080fd5b810190808035906020019092919050505061141f565b005b61046a6004803603602081101561045457600080fd5b8101908080359060200190929190505050611610565b6040518082815260200191505060405180910390f35b6104cc6004803603604081101561049657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611628565b005b610510600480360360208110156104e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611843565b005b61051a6119df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60105481565b6002600381111561056f57fe5b601460019054906101000a900460ff16600381111561058a57fe5b146105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f7420696e2064656372797074696f6e20706572696f642e0000000000000081525060200191505060405180910390fd5b610605612705565b61064d601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a05565b9050610657612705565b61066083611a05565b905061066a612727565b6040518060e001604052808460006002811061068257fe5b602002015181526020018460016002811061069957fe5b6020020151815260200160086000600281106106b157fe5b0154815260200160086001600281106106c657fe5b01548152602001836000600281106106da57fe5b60200201518152602001836001600281106106f157fe5b6020020151815260200160018152509050600060405161071090612749565b604051809103906000f08015801561072c573d6000803e3d6000fd5b509050600115158173ffffffffffffffffffffffffffffffffffffffff166346d8653f8a8a8a876040518563ffffffff1660e01b81526004018085600260200280838360005b8381101561078d578082015181840152602081019050610772565b505050509050018460026000925b818410156107e15782846020020151600260200280838360005b838110156107d05780820151818401526020810190506107b5565b50505050905001926001019261079b565b9250505083600260200280838360005b8381101561080c5780820151818401526020810190506107f1565b5050505090500182600760200280838360005b8381101561083a57808201518184015260208101905061081f565b5050505090500194505050505060206040518083038186803b15801561085f57600080fd5b505afa158015610873573d6000803e3d6000fd5b505050506040513d602081101561088957600080fd5b810190808051906020019092919050505015151461090f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4e6f7420612076616c69642064656372797074696f6e0000000000000000000081525060200191505060405180910390fd5b5050505050505050565b6000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613b7b6029913960400191505060405180910390fd5b600060038111156109ce57fe5b601460019054906101000a900460ff1660038111156109e957fe5b14610a5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f526567697274726174696f6e207068617365206973206f7665722e000000000081525060200191505060405180910390fd5b6001601460016101000a81548160ff02191690836003811115610a7b57fe5b02179055507f68c8c6cfdefb03fbc9325bd0d111232bc413157d09741f1838286c1eb439a146600160405180826003811115610ab357fe5b60ff16815260200191505060405180910390a1610b0c600c600480602002604051908101604052809291908260048015610b02576020028201915b815481526020019060010190808311610aee575b5050505050611ba5565b601081905550601054905090565b601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613ba46032913960400191505060405180910390fd5b6000601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003811115610c2157fe5b601460019054906101000a900460ff166003811115610c3c57fe5b14610caf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420696e20766f74652063617374696e672070686173652e00000000000081525060200191505060405180910390fd5b610cb7612756565b610cc08c611cd1565b9050610cca612756565b610cd38c611cd1565b90507f060c89ce5c263405370a08b6d0302b0bab3eedb83920ee0a677297dc392126f180610cfd57fe5b898b088b14610d74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f643120616e6420643220646f206e6f7420657175616c20632e0000000000000081525060200191505060405180910390fd5b610d9f610d9a610d8b610d85611ea8565b8b611f37565b610d95858e611f37565b612048565b611ba5565b8614610e13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f413120646f6573206e6f7420657175616c2072312e47202b2064312e5800000081525060200191505060405180910390fd5b610e74610e6f610e60600c600480602002604051908101604052809291908260048015610e55576020028201915b815481526020019060010190808311610e41575b50505050508b611f37565b610e6a848e611f37565b612048565b611ba5565b8514610ee8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f423120646f6573206e6f7420657175616c2072312e48202b2064312e5900000081525060200191505060405180910390fd5b610f13610f0e610eff610ef9611ea8565b8a611f37565b610f09858d611f37565b612048565b611ba5565b8414610f87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f413220646f6573206e6f7420657175616c2072322e47202b2064322e5800000081525060200191505060405180910390fd5b610ff8610ff3610fd4600c600480602002604051908101604052809291908260048015610fc9576020028201915b815481526020019060010190808311610fb5575b50505050508a611f37565b610fee610fe885610fe3611ea8565b612157565b8d611f37565b612048565b611ba5565b831461104f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613bd66021913960400191505060405180910390fd5b611096600060048060200260405190810160405280929190826004801561108b576020028201915b815481526020019060010190808311611077575b505050505083612048565b60009060046110a6929190612778565b506110ed600480806020026040519081016040528092919082600480156110e2576020028201915b8154815260200190600101908083116110ce575b505050505082612048565b60049060046110fd929190612778565b50611144600060048060200260405190810160405280929190826004801561113a576020028201915b815481526020019060010190808311611126575b5050505050612179565b60089060026111549291906127b8565b5061119a60048080602002604051908101604052809291908260048015611190576020028201915b81548152602001906001019080831161117c575b5050505050612179565b600a9060026111aa9291906127b8565b506000601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050505050505050565b600a816002811061121f57fe5b016000915090505481565b6000816004811061123757fe5b016000915090505481565b60136020528060005260406000206000915090505481565b6004816004811061126757fe5b016000915090505481565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611318576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613b7b6029913960400191505060405180910390fd5b6001600381111561132557fe5b601460019054906101000a900460ff16600381111561134057fe5b146113b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420696e20766f74652063617374696e672070686173652e00000000000081525060200191505060405180910390fd5b6002601460016101000a81548160ff021916908360038111156113d257fe5b02179055507f68c8c6cfdefb03fbc9325bd0d111232bc413157d09741f1838286c1eb439a14660026040518082600381111561140a57fe5b60ff16815260200191505060405180910390a1565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613b7b6029913960400191505060405180910390fd5b6003808111156114d157fe5b601460019054906101000a900460ff1660038111156114ec57fe5b1461155f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f44656372797074696f6e206973206e6f742066696e6973686564207965742e0081525060200191505060405180910390fd5b6115a46004808060200260405190810160405280929190826004801561159a576020028201915b815481526020019060010190808311611586575b5050505050611ba5565b6115b56115af612249565b83612271565b146115bf57600080fd5b7f562cd572b2ba3b666cd989fc4ca98419ec81e75f04528df9d9d76fdb7807ee71816040518082815260200191505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff16ff5b6008816002811061161d57fe5b016000915090505481565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613b7b6029913960400191505060405180910390fd5b600060038111156116db57fe5b601460019054906101000a900460ff1660038111156116f657fe5b14611769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f526567697274726174696f6e207068617365206973206f7665722e000000000081525060200191505060405180910390fd5b80601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117fc600c6004806020026040519081016040528092919082600480156117e9576020028201915b8154815260200190600101908083116117d5575b50505050506117f783611cd1565b612048565b600c90600461180c929190612778565b506014600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550505050565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613b7b6029913960400191505060405180910390fd5b600060038111156118f657fe5b601460019054906101000a900460ff16600381111561191157fe5b14611984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f526567697274726174696f6e207068617365206973206f7665722e000000000081525060200191505060405180910390fd5b6001601260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611a0d612705565b6000807f800000000000000000000000000000000000000000000000000000000000000084161415905060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8416905060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611a8857fe5b828309905060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611ab757fe5b611af9611af4620292fc7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611ae957fe5b86620292f809612295565b6122ec565b611b04600185612295565b0990506000611b128261231f565b905060007f183227397098d014dc2822db40c0ac2e9419f4243cdcb848a1f0fac9f800000082119050858015611b46575080155b80611b58575085158015611b575750805b5b15611b8357817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010391505b6040518060400160405280838152602001868152509650505050505050919050565b600080611bc283600360048110611bb857fe5b60200201516122ec565b90507f183227397098d014dc2822db40c0ac2e9419f4243cdcb848a1f0fac9f80000007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611c0d57fe5b8285600060048110611c1b57fe5b6020020151091115611c8c577f80000000000000000000000000000000000000000000000000000000000000007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611c7057fe5b8285600160048110611c7e57fe5b602002015109179150611ccb565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611cb457fe5b8184600160048110611cc257fe5b60200201510991505b50919050565b611cd9612756565b6000807f800000000000000000000000000000000000000000000000000000000000000084161415905060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8416905060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611d5457fe5b828309905060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611d8357fe5b611dc5611dc0620292fc7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611db557fe5b86620292f809612295565b6122ec565b611dd0600185612295565b0990506000611dde8261231f565b905060007f183227397098d014dc2822db40c0ac2e9419f4243cdcb848a1f0fac9f800000082119050858015611e12575080155b80611e24575085158015611e235750805b5b15611e4f57817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010391505b60405180608001604052808381526020018681526020017f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180611e8e57fe5b878509815260200160018152509650505050505050919050565b611eb0612756565b60405180608001604052807f2491aba8d3a191a76e35bc47bd9afe6cc88fee14d607cbe779f2349047d5c15781526020017f2e07297f8d3c3d7818dbddfd24c35583f9a9d4ed0cb0c1d1348dd8f7f99152d781526020017f208208dc6601090734690a34e01702d95d3318592391d55c577ac64dcf536c5281526020016001815250905090565b611f3f612756565b6000829050611f4c612756565b604051806080016040528060008152602001600181526020016000815260200160018152509050600085600060048110611f8257fe5b60200201519050600086600160048110611f9857fe5b60200201519050600087600260048110611fae57fe5b60200201519050600088600360048110611fc457fe5b602002015190505b60008614612039576000600187161461200c5761200985604051806080016040528087815260200186815260200185815260200184815250612048565b94505b6120178484836124ff565b809450819550829650839750505050506002868161203157fe5b049550611fcc565b84965050505050505092915050565b612050612756565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001620292fc620292f88285518751098360208701516020890151098460408801518660408b015186090985606089015160608b015109868760208b01518b51088860208d01518d510809600185018110156120cb5787810190505b87858203069050600184018110156120e35787810190505b8784820306905081600184018110156120fc5788810190505b888482030690508884840889878a09866001820181101561211d578b810190505b8b8282030690508b8486098d528b81840960208e01528b81860960408e01528b83850960608e015250505050505050505050505092915050565b61215f612756565b6121718361216c846125d9565b612048565b905092915050565b612181612705565b600061219d8360036004811061219357fe5b60200201516122ec565b90507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806121c757fe5b81846000600481106121d557fe5b602002015109826000600281106121e857fe5b6020020181815250507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061221957fe5b818460016004811061222757fe5b6020020151098260016002811061223a57fe5b60200201818152505050919050565b60007fae07297f8d3c3d7818dbddfd24c35583f9a9d4ed0cb0c1d1348dd8f7f99152d7905090565b600061228d61228861228285611cd1565b84611f37565b611ba5565b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806122bf57fe5b827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001038408905092915050565b6000612318827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff612691565b9050919050565b6000612348827c0183227397098d014dc2822db40c0ac2e9419f4243cdcb848a1f0faca0612691565b90506000612373837c030644e72e131a029b85045b68181585d2833e84879b9709143e1f593f612691565b905060007f2a3c09f0a58a7e8500e0a7eb8ef62abc402d111e41112ed49bd61b6e725b19f09050600080601c905060005b6001156124f457600090508492505b600183146123f5577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806123e357fe5b838409925080806001019150506123b3565b60008161ffff16141561240f5785955050505050506124fa565b83925060005b60018284030361ffff168161ffff161015612464577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061245257fe5b84850993508080600101915050612415565b507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061248d57fe5b83840993507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806124ba57fe5b86840995507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806124e757fe5b84860994508091506123a4565b50505050505b919050565b6000806000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001620292fc81898a0982898a098389858b6002090984838509858c8e08868182099050600185018110156125595786810190505b86858203069050600184018110156125715786810190505b8684820306905086848308806001850181101561258e5788810190505b8885820306905083600187018110156125a75789810190505b89878203069050898285099d50898184099c50898185099b50898383099a505050505050505050505093509350935093565b6125e1612756565b6040518060800160405280836000600481106125f957fe5b60200201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010381526020018360016004811061263257fe5b602002015181526020018360026004811061264957fe5b60200201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010381526020018360036004811061268257fe5b60200201518152509050919050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa80600081146126f657825194506126fb565b600080fd5b5050505092915050565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060e00160405280600790602082028036833780820191505090505090565b61135d8061281e83390190565b6040518060800160405280600490602082028036833780820191505090505090565b82600481019282156127a7579160200282015b828111156127a657825182559160200191906001019061278b565b5b5090506127b491906127f8565b5090565b82600281019282156127e7579160200282015b828111156127e65782518255916020019190600101906127cb565b5b5090506127f491906127f8565b5090565b61281a91905b808211156128165760008160009055506001016127fe565b5090565b9056fe608060405234801561001057600080fd5b5061133d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806346d8653f14610030575b600080fd5b61018f60048036036101e081101561004757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156100fc578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906100a8565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060e001906007806020026040519081016040528092919082600760200280828437600081840152601f19601f82011690508083019250505050505091929192905050506101a9565b604051808215151515815260200191505060405180910390f35b60006101b36111a0565b6040518060400160405280876000600281106101cb57fe5b60200201518152602001876001600281106101e257fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061021557fe5b602002015160006002811061022657fe5b602002015181526020018860006002811061023d57fe5b602002015160016002811061024e57fe5b6020020151815250815260200160405180604001604052808860016002811061027357fe5b602002015160006002811061028457fe5b602002015181526020018860016002811061029b57fe5b60200201516001600281106102ac57fe5b602002015181525081525081602001819052506040518060400160405280856000600281106102d757fe5b60200201518152602001856001600281106102ee57fe5b602002015181525081604001819052506060600767ffffffffffffffff8111801561031857600080fd5b506040519080825280602002602001820160405280156103475781602001602082028036833780820191505090505b50905060008090505b600781101561038f5784816007811061036557fe5b602002015182828151811061037657fe5b6020026020010181815250508080600101915050610350565b50600061039c82846103bc565b14156103ad576001925050506103b4565b6000925050505b949350505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506103ea6111d3565b6103f261052e565b905080608001515160018651011461040957600080fd5b61041161121a565b6040518060400160405280600081526020016000815250905060008090505b86518110156104a7578387828151811061044657fe5b60200260200101511061045857600080fd5b610498826104938560800151600185018151811061047257fe5b60200260200101518a858151811061048657fe5b6020026020010151610bc7565b610c59565b91508080600101915050610430565b506104ca8183608001516000815181106104bd57fe5b6020026020010151610c59565b9050610510856000015186602001516104e284610d0a565b85604001516104f48a60400151610d0a565b87606001516105068960000151610d0a565b8960200151610da4565b6105205760019350505050610528565b600093505050505b92915050565b6105366111d3565b60405180604001604052807f1936c240636390dc823e3a728e94b208eb53c6756d81da57ec3425e05d43ac1081526020017f2d70ff78e8216bf29d58923a686d9738278b8ce2fd822e197c85b09286d155668152508160000181905250604051806040016040528060405180604001604052807f2b4daf047abe2e7f0b311118c1b963b63695dc0d769cea78849604434de055bf81526020017f29c13ecb6f33dbc4b3b8a02e2e255511ce4c26a8a2f299efcc94caf2de4fce00815250815260200160405180604001604052807f1da9020008df7f549751f8a251af3b2dc4a2ad3e0870de54acaedd9fc1b47e1781526020017f25ea0d7e2b29de431b86a943db30dbf4d98f68df9ca8a9628d14d1591e817d908152508152508160200181905250604051806040016040528060405180604001604052807f011016e22ae045444f50fb80f246ec486c7e02af09132cd38c4fcf484983e4f281526020017ee83c788c2878d1d5eba3ed49b0d81e4c0487dedc3e4d1c2baab5833785b62f815250815260200160405180604001604052807f05eb89e741ed5b5d611cebf92d1ed02cd6f3311089f0d400df7d9ced5a48fd4181526020017f132a90a3b0d369ccd66e2a5ba04a935e44d8ad5dca93a76bba592a578130a9118152508152508160400181905250604051806040016040528060405180604001604052807f065f6a3323a2abffd621fc263f348eb914904b68d5897729ae34a6b9d33f085281526020017f0c3b60f59d3bd50328a04c0ff6d979199685d0526f89f6ac29d6174ce24707a2815250815260200160405180604001604052807f26e7ebce2b44efef6b6315938e33f0a8ecc82dbad635c9efa681ed85bbb5998281526020017f12e0f3721230a0f38f6c9913048d5230fd2615ef3ff7f6ee4b20dfe0bdea1a868152508152508160600181905250600867ffffffffffffffff811180156107f957600080fd5b5060405190808252806020026020018201604052801561083357816020015b61082061121a565b8152602001906001900390816108185790505b50816080018190525060405180604001604052807f1f2b8ff4534983d0d33e8916580bb2780d0dd44f83c40da3bd528ceb836aa7be81526020017f18f93837c2205f7d46182e89dce31012c349f48b5fdc6cfc7f5ca87432ad0a6881525081608001516000815181106108a257fe5b602002602001018190525060405180604001604052807f19cc361dabbeae7162e2b7995cc8cdec7b83a3068742aa263d2a43d3e4d58a3981526020017f04df448885ec30882be12410f2e76a6a5ab95c9221143ebcc298abf60865c6aa815250816080015160018151811061091357fe5b602002602001018190525060405180604001604052807f157f0ed2d63f890028152b1eb6ee968176c6644f85d35ba573f3ed710829146881526020017f28c54623af3f4d6eb6135b2d363e900fcf4df8c20682af19b8cea05addf180ab815250816080015160028151811061098457fe5b602002602001018190525060405180604001604052807f21a1bf283fff42d2aa69b0f9766d8b0b9d5c1396984aa0980cf44bc30f2107a581526020017f102acb0d4f0e1aae2c1179cd4e2ec1c5970f2c4c8ee7e2b07fdfd90558d873b081525081608001516003815181106109f557fe5b602002602001018190525060405180604001604052807f2fb0d4a73f02399c2ffa4b8c57bcea64fce22d77522c0a1f9202fbb9cb1152a581526020017f0fe3d42e4130ad861255ace325916f9c4141785968cfc5168da978a9c6cd69be8152508160800151600481518110610a6657fe5b602002602001018190525060405180604001604052807f2e31608c50ece6b98a83f8e4cd6459aff3c464cdfed543dceb90a351e0d7bfcb81526020017f2b9ff0b0cb094ceed34a79dcee2491d08011ff7a07c4ff52451cfc03daacc04d8152508160800151600581518110610ad757fe5b602002602001018190525060405180604001604052807f22ca2cb3a37e2ae2d101d43109adc6339dec06406e635345d969ac01c11aee5981526020017f0ccdf19effde50e454cf8ff28f758b20be4351843312a4de7f158d2e68ff2fa38152508160800151600681518110610b4857fe5b602002602001018190525060405180604001604052807f0e2cdeda6976d5d2d2ae3de61895775ee1501c55649fd20f993862aeac31bab681526020017f2c24ec7032e1ccf88f75dec1e6ebd390122d6c53d59d1428afd78e9d9c1b80448152508160800151600781518110610bb957fe5b602002602001018190525090565b610bcf61121a565b610bd7611234565b836000015181600060038110610be957fe5b602002018181525050836020015181600160038110610c0457fe5b6020020181815250508281600260038110610c1b57fe5b602002018181525050600060608360808460076107d05a03fa90508060008114610c4457610c46565bfe5b5080610c5157600080fd5b505092915050565b610c6161121a565b610c69611256565b836000015181600060048110610c7b57fe5b602002018181525050836020015181600160048110610c9657fe5b602002018181525050826000015181600260048110610cb157fe5b602002018181525050826020015181600360048110610ccc57fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114610cf557610cf7565bfe5b5080610d0257600080fd5b505092915050565b610d1261121a565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610d4f575060008360200151145b15610d73576040518060400160405280600081526020016000815250915050610d9f565b60405180604001604052808460000151815260200182856020015181610d9557fe5b0683038152509150505b919050565b60006060600467ffffffffffffffff81118015610dc057600080fd5b50604051908082528060200260200182016040528015610dfa57816020015b610de761121a565b815260200190600190039081610ddf5790505b5090506060600467ffffffffffffffff81118015610e1757600080fd5b50604051908082528060200260200182016040528015610e5157816020015b610e3e611278565b815260200190600190039081610e365790505b5090508a82600081518110610e6257fe5b60200260200101819052508882600181518110610e7b57fe5b60200260200101819052508682600281518110610e9457fe5b60200260200101819052508482600381518110610ead57fe5b60200260200101819052508981600081518110610ec657fe5b60200260200101819052508781600181518110610edf57fe5b60200260200101819052508581600281518110610ef857fe5b60200260200101819052508381600381518110610f1157fe5b6020026020010181905250610f268282610f36565b9250505098975050505050505050565b60008151835114610f4657600080fd5b600083519050600060068202905060608167ffffffffffffffff81118015610f6d57600080fd5b50604051908082528060200260200182016040528015610f9c5781602001602082028036833780820191505090505b50905060008090505b8381101561114257868181518110610fb957fe5b602002602001015160000151826000600684020181518110610fd757fe5b602002602001018181525050868181518110610fef57fe5b60200260200101516020015182600160068402018151811061100d57fe5b60200260200101818152505085818151811061102557fe5b60200260200101516000015160006002811061103d57fe5b602002015182600260068402018151811061105457fe5b60200260200101818152505085818151811061106c57fe5b60200260200101516000015160016002811061108457fe5b602002015182600360068402018151811061109b57fe5b6020026020010181815250508581815181106110b357fe5b6020026020010151602001516000600281106110cb57fe5b60200201518260046006840201815181106110e257fe5b6020026020010181815250508581815181106110fa57fe5b60200260200101516020015160016002811061111257fe5b602002015182600560068402018151811061112957fe5b6020026020010181815250508080600101915050610fa5565b5061114b61129e565b6000602082602086026020860160086107d05a03fa9050806000811461117057611172565bfe5b508061117d57600080fd5b60008260006001811061118c57fe5b602002015114159550505050505092915050565b60405180606001604052806111b361121a565b81526020016111c0611278565b81526020016111cd61121a565b81525090565b6040518060a001604052806111e661121a565b81526020016111f3611278565b8152602001611200611278565b815260200161120d611278565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b604051806040016040528061128b6112c0565b81526020016112986112c0565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b604051806040016040528060029060208202803683378082019150509050509056fea2646970667358221220cd518dfbbb4291645e913c9c5970faa99200b55a26d98ef1d02caa5d4350965b64736f6c637827302e362e392d646576656c6f702e323032302e352e32372b636f6d6d69742e396634303766653000584f6e6c7920766f74696e672061646d696e206d61792063616c6c20746869732066756e6374696f6e2e55736572206973206e6f7420616e20656c696769626c6520766f746572206f722068617320616c726561647920766f746564423220646f6573206e6f7420657175616c2072322e48202b2064322e28592d4729a26469706673582212206a7e974d73d3fc38bf1897359f33a3f234ea0ba602a852ff413f44cf8e8ab3d864736f6c637827302e362e392d646576656c6f702e323032302e352e32372b636f6d6d69742e39663430376665300058";
const initial = async () => {
	//You will start here
	const deployButton = document.getElementById('deployButton');
	const networkDiv = document.getElementById('network')
	const onboardButton = document.getElementById('connectButton');
	const contractStatus = document.getElementById('contractStatus');
	const accountsDiv = document.getElementById('accounts');
	const chainIdDiv = document.getElementById('chainId');
	const decryptButton = document.getElementById('decryptButton');
	const babyJubJub = new BabyJubJub.BabyJubPoint();
	const onboarding = new MetaMaskOnboarding({
		forwarderOrigin
	});
	let accounts;
	let accountButtonsInitialized = false;
	const accountButtons = [
		deployButton,
		decryptButton
	];
	const isMetaMaskConnected = () => accounts && accounts.length > 0;
	const isMetaMaskInstalled = () => {
		const {
			ethereum
		} = window;
		return Boolean(ethereum && ethereum.isMetaMask);
	};
	const onClickInstall = () => {
		onboardButton.innerText = 'Onboarding in progress';
		onboardButton.disabled = true;
		onboarding.startOnboarding();
	};
	const onClickConnect = async () => {
		try {
			const newAccounts = await ethereum.request({
				method: 'eth_requestAccounts',
			})
			handleNewAccounts(newAccounts)
		} catch (error) {
			console.error(error)
		}
	}
	const updateButtons = () => {
		const accountButtonsDisabled = !isMetaMaskInstalled() || !isMetaMaskConnected()
		if (accountButtonsDisabled) {
			for (const button of accountButtons) {
				button.disabled = true;
			}
			// clearTextDisplays()
		} else {
			deployButton.disabled = false;
		}
	}
	const MetamaskClientCheck = () => {
		if (!isMetaMaskInstalled()) {
			onboardButton.innerText = 'Click here to install MetaMask!';
			onboardButton.onclick = onClickInstall;

			onboardButton.disabled = false;
		} else {

			onboardButton.innerText = 'Connect';
			onboardButton.onclick = onClickConnect;
			onboardButton.disabled = false;
		}
	};
	MetamaskClientCheck();
	const initializeAccountButtons = () => {
		if (accountButtonsInitialized) {
			return
		}
		accountButtonsInitialized = true;
		const provider = new ethers.providers.Web3Provider(window.ethereum);
		const signer = provider.getSigner();
		deployButton.onclick = async () => {
			const contractAddr = document.getElementById('contractAddr').value;
			contractStatus.innerHTML = 'Deploying';
			try {
				const myContract = new ethers.Contract(contractAddr, abi, provider);
				if (myContract.address === contractAddr) {
					contractStatus.innerHTML = 'Deployed'
					decryptButton.disabled = false;
				}
				const votingAddress = await provider.getStorageAt(contractAddr, 16);
				const totalRx = await provider.getStorageAt(contractAddr, 8);
				const totalRy = await provider.getStorageAt(contractAddr, 9);
				decryptButton.onclick = async () => {
					var partyPublicKey = new Array();
					var totalR = new Array();
					var secretMulTotalR = new Array();
					var zokratesInput = new Array();
					contractStatus.innerHTML = 'Decryption initiated';
					const srtContainer = document.getElementById('srtContainer').value;
					totalR.push(BigInt(totalRx).toString(), BigInt(totalRy).toString());
					var secretTmp = BigInt(srtContainer);
					console.log(secretTmp);
					const keyGenTmp = new BabyJubJub.keyGen(secretTmp);
					partyPublicKey.push(keyGenTmp.Public_point.x.toString(), keyGenTmp.Public_point.y.toString());
					console.log(partyPublicKey);
					console.log(keyGenTmp.infield);
					var partySecretValue = BigInt(keyGenTmp.infield);
					const rGPoint = new BabyJubJub.BabyJubPoint(totalR[0], totalR[1]);
					const srG_point = rGPoint.mul(partySecretValue);
					const compressed_srG = utils.leBuff2int(srG_point.compress());
					secretMulTotalR.push(srG_point.x.toString(), srG_point.y.toString());
					zokratesInput.push(partyPublicKey, totalR, secretMulTotalR, partySecretValue.toString());
					console.log(zokratesInput);
					var zokratesProvider = await initialize();
					contractStatus.innerHTML = 'ready for proof generation';
					const source = data;
					// compilation
					const artifacts = zokratesProvider.compile(source);
					const {
						witness,
						output
					} = await zokratesProvider.computeWitness(artifacts, zokratesInput);
					//console.log(output);
					const keypair = await zokratesProvider.setup(artifacts.program);
					//generate proof
					const proof = await zokratesProvider.generateProof(artifacts.program, witness, keypair.pk);
					contractStatus.innerHTML = 'Proof generated.';
					console.log(proof);
					const signContract = myContract.connect(signer);
					const tx = signContract.voteDecrypt(proof.proof.a, proof.proof.b, proof.proof.c, compressed_srG.toString()).then(result => {
						contractStatus.innerHTML = 'Valid decryption.';
					}).catch(err => {
						contractStatus.innerHTML = 'Invalid decryption.'
						console.log(err.message);
					});
				}
			} catch (e) {
				console.error(e);
				contractStatus.innerHTML = 'Deployment Failed';
			}
		}
	}

	function handleNewAccounts(newAccounts) {
		accounts = newAccounts
		accountsDiv.innerHTML = accounts
		if (isMetaMaskConnected()) {
			initializeAccountButtons()
		}
		updateButtons();
	}

	function handleNewChain(chainId) {
		chainIdDiv.innerHTML = chainId
	}

	function handleNewNetwork(networkId) {
		networkDiv.innerHTML = networkId
	}
	async function getNetworkAndChainId() {
		try {
			const chainId = await ethereum.request({
				method: 'eth_chainId',
			})
			handleNewChain(chainId)
			const networkId = await ethereum.request({
				method: 'net_version',
			})
			handleNewNetwork(networkId)
		} catch (err) {
			console.error(err)
		}
	}
	updateButtons();
	if (isMetaMaskInstalled()) {
		ethereum.autoRefreshOnNetworkChange = false;
		getNetworkAndChainId()
		ethereum.on('chainChanged', handleNewChain)
		ethereum.on('networkChanged', handleNewNetwork)
		ethereum.on('accountsChanged', handleNewAccounts)
		try {
			const newAccounts = await ethereum.request({
				method: 'eth_accounts',
			})
			handleNewAccounts(newAccounts)
		} catch (err) {
			console.error('Error on init when getting accounts', err)
		}
	}
};
window.addEventListener('DOMContentLoaded', initial);
