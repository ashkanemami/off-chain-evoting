'use strict';
var express = require('express');
var session = require('express-session');
const { exec } = require("child_process");
const {BabyJubPoint, Fr, randFr, G, keyGenRand, keyGen} = require("./BabyJubPoint");
var bodyParser = require('body-parser');
const MerkleTree = require('./merkle.js');
const Schnorr = require("./SchnorrSignature.js");
var cors = require('cors');
const fs = require('fs');
const path = require('path');
const mimcjs = require("./node_modules/circomlib/src/mimc7.js");
var Accounts = require('web3-eth-accounts');
const Web3 = require('web3');
const web3 = new Web3(new Web3.providers.HttpProvider("https://eth-kovan.alchemyapi.io/v2/TANKag2yF4E5MWYXyzlynLUZ21cEosP8"));

let accounts = new Accounts('wss://eth-kovan.ws.alchemyapi.io/v2/TANKag2yF4E5MWYXyzlynLUZ21cEosP8');
var app = express();
app.use(session({
	secret: 'secret',
	resave: true,
	saveUninitialized: true
}));
app.use(bodyParser.urlencoded({
	extended: true
}));
app.use(bodyParser.json());
app.engine('html', require('ejs').renderFile);

let abi = [
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "result",
				"type": "uint256"
			}
		],
		"name": "ElectionEnded",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "enum VoteContainer.VotingPhases",
				"name": "",
				"type": "uint8"
			}
		],
		"name": "NewElectionPhase",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "C",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "R",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "decryptorAddress",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_decryptorPublicKey",
				"type": "uint256"
			}
		],
		"name": "addDecryptorPublicKey",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "bulletinBoardsAddress",
				"type": "address"
			}
		],
		"name": "addEligibleBulletinBoards",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_merkleRoot",
				"type": "uint256"
			}
		],
		"name": "addMerkleRoot",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "admin",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256[2]",
				"name": "a",
				"type": "uint256[2]"
			},
			{
				"internalType": "uint256[2][2]",
				"name": "b",
				"type": "uint256[2][2]"
			},
			{
				"internalType": "uint256[2]",
				"name": "c",
				"type": "uint256[2]"
			},
			{
				"internalType": "uint256",
				"name": "prevRoot",
				"type": "uint256"
			},
			{
				"internalType": "uint256[2]",
				"name": "prevVoteR",
				"type": "uint256[2]"
			},
			{
				"internalType": "uint256[2]",
				"name": "prevVoteC",
				"type": "uint256[2]"
			},
			{
				"internalType": "uint256",
				"name": "nextRoot",
				"type": "uint256"
			},
			{
				"internalType": "uint256[2]",
				"name": "newVoteR",
				"type": "uint256[2]"
			},
			{
				"internalType": "uint256[2]",
				"name": "newVoteC",
				"type": "uint256[2]"
			}
		],
		"name": "castVote",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "decryptorPublicKey",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "endRegistration",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "endVoteCasting",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "key",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "merkleRoot",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "votingResult",
				"type": "uint256"
			}
		],
		"name": "revealVotingResult",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256[2]",
				"name": "a",
				"type": "uint256[2]"
			},
			{
				"internalType": "uint256[2][2]",
				"name": "b",
				"type": "uint256[2][2]"
			},
			{
				"internalType": "uint256[2]",
				"name": "c",
				"type": "uint256[2]"
			},
			{
				"internalType": "uint256",
				"name": "sRComressed",
				"type": "uint256"
			}
		],
		"name": "voteDecrypt",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
];
// The bytecode from Solidity, compiling the above source
let bytecode = "";

async function getStorage(address,number){
	const acc = await web3.eth.accounts.wallet.add("0xef69c78004f1fe76b0e410824caf45d7b88c66d7d2892a2b6ae9d14644291e52");
	const account = web3.eth.accounts.wallet;
	var myContract = new web3.eth.Contract(abi, address, {
	    gas: 12500000,
	    gasPrice: '200000000000' // default gas price in wei, 20 gwei in this case
	});
	var value = await web3.eth.getStorageAt(address,number);
	console.log(value);
	return value;
}

async function sendTransaction(a,b,c,prevRoot,prevVoteR,prevVoteC,nextRoot,newVoteR,newVoteC){
	const acc = await web3.eth.accounts.wallet.add("0xef69c78004f1fe76b0e410824caf45d7b88c66d7d2892a2b6ae9d14644291e52");
	const account = web3.eth.accounts.wallet;
	var myContract = new web3.eth.Contract(abi,"0x327950d7485b9483C0713798Fa2b4e9681E37b55", {
	    gas: 12500000,
	    gasPrice: '200000000000' // default gas price in wei, 20 gwei in this case
	});
	console.log(a);
	console.log(prevVoteR);
		var decryptPubTx = myContract.methods.castVote(a,b,c,prevRoot,prevVoteR,prevVoteC,nextRoot,newVoteR,newVoteC);
		console.log(decryptPubTx);
		const decryptPubData = decryptPubTx.encodeABI();
		console.log(decryptPubData);
		// console.log(await decryptPubTx.estimateGas({from: account[0].address}));
		const decryptPubTxData = {
			from: account[0].address,
			to: myContract.options.address,
			data: decryptPubData,
			gas:12500000,
			gasPrice: await web3.eth.getGasPrice()
		};
		console.log(decryptPubTxData);
		const decryptPubTxReceipt = await web3.eth.sendTransaction(decryptPubTxData);
		console.log(decryptPubTxReceipt);
}


function execShellCommand(cmd){
	const { exec } = require("child_process");
	return new Promise((resolve,rejeet) => {
		exec(cmd, (error, stdout, stderr) => {
			if (error) {
				console.log(`error: ${error.message}`);
				return;
			}
			resolve(stdout? stdout : stderr);
		});
	});
}
async function main() {
	var counter = 9;
	let num = 0;
	let merkleTree = new MerkleTree();
		try {
			app.get('/', function(request, response) {
				request.session.loggedin = false;
				response.render(__dirname + "/public/index.html", {
					_: "salam"
				});
			});
			app.get('/index.html', function(request, response) {
				request.session.loggedin = false;
				response.sendFile(path.join(__dirname + '/public/index.html'));
			});
			//-----------------------------Voter---------------------------------
			app.get('/voter/index.html', function(request, response) {
				response.sendFile(path.join(__dirname + '/public/voter/index.html'));
			});
			app.get('/voter/bundle.js', function(request, response) {
				response.sendFile(path.join(__dirname + '/public/voter/bundle.js'));
			});
			//voter cast its vote
			app.post('/voter/voter-cast', function(request, response) {
				// console.log(request.body);
				let rawdata_votes = fs.readFileSync('votes.json');
				let votes_list = JSON.parse(rawdata_votes);
				var new_vote_json = request.body;
				votes_list.push(new_vote_json);
				let new_votes_list = JSON.stringify(votes_list);
				fs.writeFileSync('votes.json', new_votes_list);
				counter++;
				console.log(counter);
				if(counter == 10){
					//check with voters.json merkle root
					let voterslist = fs.readFileSync('voters.json');
					let voterPK = JSON.parse(voterslist);
					var vPK = [];
					for(let i = 0; i<voterPK.length;i++){
						vPK.push({
							"x":BigInt(voterPK[i].x),
							"y":BigInt(voterPK[i].y)
						});
					}
					// console.log(vPK);
					merkleTree.addLeaves(vPK, true);  // add multiple leaves, need to make hashes
					merkleTree.makeTree();
					let mroot = merkleTree.getMerkleRoot();
					let mmroot = 0;
					var proofPath = [];
					async function voteCount() {
						var R_0 = await getStorage("0x327950d7485b9483C0713798Fa2b4e9681E37b55",0);
						var R_1 = await getStorage("0x327950d7485b9483C0713798Fa2b4e9681E37b55",1);
						var C_0 = await getStorage("0x327950d7485b9483C0713798Fa2b4e9681E37b55",2);
						var C_1 = await getStorage("0x327950d7485b9483C0713798Fa2b4e9681E37b55",3);
						var R = new BabyJubPoint(BigInt(R_0),BigInt(R_1));//when read from smart contract should change these values
						var C = new BabyJubPoint(BigInt(R_0),BigInt(R_1));
						var merklePos = [];
						var voterPubKeyArray = [];
						var rs = [];
						var cs = [];
						var ss = [];
						var es = [];
						var a1s = [];
						var a2s = [];
						var b1s = [];
						var b2s = [];
						var d1s = [];
						var d2s = [];
						var r1s = [];
						var r2s = [];
						let rawdata_c = fs.readFileSync('votes.json');
						let c_list = JSON.parse(rawdata_c);
						let votingPublicKey = [c_list[0].VotingPublicKey.X,c_list[0].VotingPublicKey.Y];
						console.log("_______-",num*10);
						for(let i=num*10; i<(num*10+10); i++){
							console.log("----------");
							//check merkle position is true in the voters list
							var merklePosition = (BigInt(c_list[i].MerklePosition)).toString(10);
							console.log(merklePosition);
							if(vPK[merklePosition].x == c_list[i].VoterPublicKey.X && vPK[merklePosition].y == c_list[i].VoterPublicKey.Y){
								console.log("E:",c_list[i].VoterSign.e);
								console.log("S:",c_list[i].VoterSign.s);
								console.log("public:",[c_list[i].VoterPublicKey.X,c_list[i].VoterPublicKey.Y]);
								console.log("hash",mimcjs.multiHash([BigInt(c_list[i].R.X), BigInt(c_list[i].R.Y), BigInt(c_list[i].C.X), BigInt(c_list[i].C.Y)]));

								// const signatureCheck = Schnorr.verify(BigInt(c_list[i].VoterSign.e),BigInt(c_list[i].VoterSign.s),[c_list[i].VoterPublicKey.X,c_list[i].VoterPublicKey.Y],[BigInt(c_list[i].R.X), BigInt(c_list[i].R.Y), BigInt(c_list[i].C.X), BigInt(c_list[i].C.Y)]);
								// console.log(signatureCheck);
								voterPubKeyArray.push([c_list[i].VoterPublicKey.X,c_list[i].VoterPublicKey.Y]);
								merklePos.push(c_list[i].MerklePosition);
								rs.push([c_list[i].R.X,c_list[i].R.Y]);
								cs.push([c_list[i].C.X,c_list[i].C.Y]);
								ss.push(c_list[i].VoterSign.s);
								es.push(c_list[i].VoterSign.e);
								a1s.push([c_list[i].A1.X,c_list[i].A1.Y]);
								a2s.push([c_list[i].A2.X,c_list[i].A2.Y]);
								b1s.push([c_list[i].B1.X,c_list[i].B1.Y]);
								b2s.push([c_list[i].B2.X,c_list[i].B2.Y]);
								r1s.push(c_list[i].r1);
								r2s.push(c_list[i].r2);
								d1s.push(c_list[i].d1);
								d2s.push(c_list[i].d2);
								const rPoint = new BabyJubPoint(c_list[i].R.X,c_list[i].R.Y);
						    const cPoint = new BabyJubPoint(c_list[i].C.X,c_list[i].C.Y);
						    // console.log(rPoint);
						    // console.log(cPoint);
						    R = R.add(rPoint);
						    C = C.add(cPoint);

								if(merklePosition == 0){
						      let pathDigest = merkleTree.getProof(0);
									// console.log(pathDigest);
						      var array = [];
						      for(let i = 0;i < pathDigest.length;i++){
						        if(pathDigest[i].left){
						          // console.log(proof[i].left);
						          array.push(pathDigest[i].left.toString());
						        }else{
						          array.push(pathDigest[i].right.toString());
						        }
						      }
						    }else{
									console.log(merklePosition);
						      let pathDigest = merkleTree.getProof(parseInt(merklePosition));
						      // console.log(pathDigest);
						      var array = [];
						      for(let i = 0;i < pathDigest.length;i++){
						        if(pathDigest[i].left){
						          // console.log(proof[i].left);
						          array.push(pathDigest[i].left.toString());
						        }else if(pathDigest[i].right){
						          array.push(pathDigest[i].right.toString());
						        }else{
						          array.push(pathDigest[i].toString());
						        }
						      }
						    }
								vPK[merklePosition] = 0n;
								// console.log(vPK);
								merkleTree.resetTree();
						    merkleTree.addLeaves(vPK, true);  // add multiple leaves, need to make hashes
						    merkleTree.makeTree();
						    mmroot = merkleTree.getMerkleRoot();
								proofPath.push(array);
							}else{
								console.log("invalid voter id!");
								c_list.splice(i, 1);
								i--;
							}
						}
						var finalOutput = [mroot.toString(),[BigInt(R_0).toString(),BigInt(R_1).toString()],[BigInt(C_0).toString(),BigInt(C_1).toString()],mmroot.toString(),[R.x.toString(),R.y.toString()],[C.x.toString(),C.y.toString()],votingPublicKey,merklePos,voterPubKeyArray,proofPath,rs,cs,ss,es,a1s,a2s,b1s,b2s,d1s,d2s,r1s,r2s];
						console.log(finalOutput);
						let zkInput = JSON.stringify(finalOutput);
						fs.writeFileSync('input.json', zkInput);
						const result = await execShellCommand("cd ./zokrates ; cat ../input.json | /home/ashkan/.zokrates/bin/zokrates compute-witness --abi --stdin; /home/ashkan/.zokrates/bin/zokrates generate-proof");
					  console.log("result finished!");
					  const result_0 = await execShellCommand("head -n 1 ./zokrates/witness");
					  if(result_0[result_0.length - 2] === "1"){
							console.log("check smart contract root and voterID is the same?");
							getStorage("0x327950d7485b9483C0713798Fa2b4e9681E37b55",9).then(value => {
								if(mroot == BigInt(value)){
									console.log("OK!");
									console.log("Merkle Root did not change.");
									const rawdataTranInput = fs.readFileSync(path.resolve(__dirname, "./zokrates/proof.json"));
									let input = JSON.parse(rawdataTranInput);
									sendTransaction([BigInt(input.proof.a[0]).toString(),BigInt(input.proof.a[1]).toString()],[[BigInt(input.proof.b[0][0]).toString(), BigInt(input.proof.b[0][1]).toString()],[BigInt(input.proof.b[1][0]).toString(), BigInt(input.proof.b[1][1]).toString()]],[BigInt(input.proof.c[0]).toString(),BigInt(input.proof.c[1]).toString()],input.inputs[0].toString(),[BigInt(input.inputs[6]).toString(),BigInt(input.inputs[7]).toString()],[BigInt(input.inputs[6]).toString(),BigInt(input.inputs[7]).toString()],input.inputs[5].toString(),[BigInt(input.inputs[6]).toString(),BigInt(input.inputs[7]).toString()],[BigInt(input.inputs[8]).toString(),BigInt(input.inputs[9]).toString()]).catch(err=>{
										console.log(err);
									});
									num++;
									counter=0;
								}
								});
					  }else{
					    console.log("NOK!");
					  }
					}
					console.log("check current root from smart contract:");
					getStorage("0x327950d7485b9483C0713798Fa2b4e9681E37b55",9).then(value => {
						console.log(value);
						if(mroot == BigInt(value)){
							console.log(value);
							voteCount();
						}else{

						}
					});
				}
			});
			//admin:
			app.get('/admin/index.html', function(request, response) {
				response.sendFile(path.join(__dirname + '/public/admin/index.html'));
			});
			app.get('/admin/bundle.js', function(request, response) {
				response.sendFile(path.join(__dirname + '/public/admin/bundle.js'));
			});

			//decryptor:
			app.get('/decrypt/index.html', function(request, response) {
				response.sendFile(path.join(__dirname + '/public/decrypt/index.html'));
			});
			app.get('/decrypt/bundle.js', function(request, response) {
				response.sendFile(path.join(__dirname + '/public/decrypt/bundle.js'));
			});
			app.get('/decrypt/0.bundle.js', function(request, response) {
				response.sendFile(path.join(__dirname + '/public/decrypt/0.bundle.js'));
			});

	} catch (error) {
		console.error(`******** FAILED to run the application: ${error}`);
	}
}
main();
var server = app.listen(5000, function() {
	var host = 'localhost'
	var port = server.address().port
	console.log("Example app listening at http://%s:%s", host, port)
})
